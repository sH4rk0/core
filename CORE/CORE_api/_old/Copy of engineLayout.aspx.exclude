<%@ Import namespace="System.Data"%>
<%@ Import namespace="System.Data.sqlClient"%>
<%@ Import Namespace="System.xml" %>

    <script runat="server">

        '//////////////////////////////////////////////////////////////////////////////////////////////////
        '//////////////////////////////////////////////////////////////////////////////////////////////////
        Dim id_site As Integer = 0
        Dim id_tree As Integer = 0
        Dim id_event As Integer = 0
        Dim id_language As Integer = 0
        Dim position As Integer = 0
        Dim id_box As Integer = 0
        Dim mycacheobj As CORE_CACHE = New CORE_CACHE
        Dim _search As String = ""
        Dim responseType As String
        Dim id_key As Integer = 0
  
       
      
        '//////////////////////////////////////////////////////////////////////////////////////////////////
        '//////////////////////////////////////////////////////////////////////////////////////////////////   
        Function update_module(ByVal _request As String, ByVal _position As Integer, ByVal _id_event As Integer) As String
                        
                   
            Dim _arr() As String = Nothing
            Dim i As Integer = 0
            Dim mybox As CORE_BOX2TREE = New CORE_BOX2TREE
           
             
            Dim module_value As String = ""
            Dim pos As Integer = 0
            Dim _return_values As String = ""
            Dim _box2tree_key As Integer = 0
            
            If _request <> "" Then
                
               
                    
                
                _arr = _request.Split(",")
                For i = 0 To UBound(_arr)
                 
                    module_value = _arr(i)
                    module_value = module_value.Replace("module_", "")
                    pos = module_value.LastIndexOf("_")
                    module_value = Left(module_value, pos)
                    _box2tree_key = Convert.ToInt32(module_value)
                    
                    Dim cache As String = "Box2tree_" & _box2tree_key.ToString() & ".cache"
                    mycacheobj.cache_folder = "modules"
                    mycacheobj.remove_cache(cache)
                    
                    mybox = New CORE_BOX2TREE(_box2tree_key)
                   
                    mybox.box_position = _position
                    mybox.id_event = _id_event
                    mybox.box_order = i
                    mybox.update(mybox)
                    
                    '_return_values = _return_values & " key:" & _box2tree_key & " pos:" & _position & " eve:" & _id_event & " ord:" & i & " req:" & _request & " cache:" & cache & "|"
                
                Next
                    
                
            End If
            _arr = Nothing
            mybox.Dispose()
            mybox = Nothing
            mycacheobj.cache_folder = "modules"
            mycacheobj.remove_cache("module_box_values_" & id_site & "_" & id_tree & "_" & id_language & "_" & _position & "_" & _id_event & "_0.cache")
           
            Return _return_values
            
        End Function
        '//////////////////////////////////////////////////////////////////////////////////////////////////
        '//////////////////////////////////////////////////////////////////////////////////////////////////
        Sub page_load()
            

            id_site = Convert.ToInt32(Request("id_site"))
            id_tree = Convert.ToInt32(Request("id_tree"))
            id_event = Convert.ToInt32(Request("id_event"))
            id_language = Convert.ToInt32(Request("id_language"))
            position = Convert.ToInt32(Request("position"))
            id_key = Convert.ToInt32(Request("id_key"))
            responseType = CORE.checkResponse()
            
            If Not CORE_USER.hasRole(CORE_USER.userRole.layoutAdministrator) Then returnData("<values><error errorId=""666"" errorLabel=""Access Forbidden"" errorMsg=""Your account is not authenticated to execute this action.""/></values>") : Return
            
            
            Select Case Request("who")
                
                Case "copyLayout"
                
                    Try
                       
                        Dim b2tree As CORE_BOX2TREE = New CORE_BOX2TREE
                        b2tree.id_language = id_language
                        b2tree.id_site = id_site
                        b2tree.id_tree = Request("to")
                        b2tree.delete()
                        b2tree.id_tree = Request("from")
                        
                        Dim reader As DataTableReader = b2tree.search()
                        Dim mybox As CORE_BOX2TREE = New CORE_BOX2TREE
                        While reader.Read
                            
                            
                            mybox.id_site = reader("id_site")
                            mybox.id_tree = Request("to")
                            mybox.id_box = reader("id_box")
                            mybox.id_language = reader("id_language")
                            mybox.id_event = reader("id_event")
                            mybox.box_position = reader("box_position")
                            mybox.box_order = reader("box_order")
                            mybox.box_enabled = reader("box_enabled")
                            mybox.insert(mybox)
                            
                            
                        End While
                        mybox.Dispose()
                        mybox = Nothing
                        
                        returnData("<values><error errorId=""0"" errorLabel=""""/></values>")
                    Catch ex As Exception

                        returnData("<values><error errorId=""301"" errorLabel=""copyLayout Error"" errorMsg=""" & Server.HtmlEncode(err.ToString()) & """/></values>")
                        
                    End Try
    	
                Case "updateLayout"
                    
                    Dim header As String = Request("Header")
                    Dim column1 As String = Request("Column1")
                    Dim column2 As String = Request("Column2")
                    Dim column3 As String = Request("Column3")
                    Dim column4 As String = Request("Column4")
                    Dim footer As String = Request("Footer")
                    
                    header = update_module(header, 1, id_event)
                    column1 = update_module(column1, 2, id_event)
                    column2 = update_module(column2, 3, id_event)
                    column3 = update_module(column3, 4, id_event)
                    column4 = update_module(column4, 5, id_event)
                    footer = update_module(footer, 6, id_event)
                    
                    
                    Dim values As String = header & column1 & column2 & column3 & column4 & footer
                    
                    
                    
                    
                    'textResponse.Visible = True
                    Dim respo As String = String.Empty
                    If values <> "" Then respo = Left(values, values.Length - 1)
                    
                    returnData("<values><update value='" & respo & "'/><error errorId=""0"" errorLabel=""""/></values>")
                    
                   
                    'Response.ContentType = "text/html"
                    
                Case "insertBox2Tree"
                    
                    
                    Dim id_box As Integer = Request("id_box")
                    
                    Try
                        Dim mybox As CORE_BOX2TREE = New CORE_BOX2TREE
                        mybox.id_site = id_site
                        mybox.id_tree = id_tree
                        mybox.id_box = id_box
                        mybox.id_language = id_language
                        mybox.box_position = position
                        mybox.id_event = id_event
                        mybox.box_order = 0
                        mybox.box_enabled = 0
                        Dim idboxkey As Integer = mybox.insert(mybox)
                        
                        mycacheobj.cache_folder = "modules"
                        mycacheobj.remove_cache("module_box_values_" & id_site & "_" & id_tree & "_" & id_language & "_" & position & "_" & id_event & "_0.cache")
                        
                        returnData("<values><box id_key=""" & idboxkey & """ id_box=""" & id_box & """ boxPosition=""" & position & """/><error errorId=""0"" errorLabel=""""/></values>")
                    Catch ex As Exception

                        returnData("<values><error errorId=""301"" errorLabel=""insertBox2Tree Error"" errorMsg=""" & Server.HtmlEncode(Err.ToString()) & """/></values>")
                        
                    End Try
            		   
                Case "deleteBox2Tree"
                    
                    Dim box As CORE_BOX2TREE = New CORE_BOX2TREE
                    Try
                        box.id_key = id_key
                        box.delete()
                        box.Dispose()
                        box = Nothing
                        mycacheobj.cache_folder = "modules"
                        mycacheobj.remove_cache("Box2tree_" & id_key & ".cache")
                        mycacheobj.remove_cache("module_box_values_" & id_site & "_" & id_tree & "_" & id_language & "_" & position & "_" & id_event & "_0.cache")
                        
                        returnData("<values><error errorId=""0"" errorLabel=""""/></values>")
                        
                    Catch ex As Exception

                        returnData("<values><error errorId=""301"" errorLabel=""deleteBox2Tree Error"" errorMsg=""" & Server.HtmlEncode(ex.ToString()) & """/></values>")
                        
                    End Try
                    
                    
                Case "enableBox2Tree"
                    mycacheobj.cache_folder = "modules"
                    mycacheobj.remove_cache("Box2tree_" & id_key & ".cache")
                    Dim box As CORE_BOX2TREE = New CORE_BOX2TREE(id_key)
                    Try
                        
                        If box.box_enabled = True Then box.box_enabled = False Else box.box_enabled = True
                        box.update(box)
                        box.Dispose()
                        box = Nothing
                        mycacheobj.cache_folder = "modules"
                        mycacheobj.remove_cache("Box2tree_" & id_key & ".cache")
                        mycacheobj.remove_cache("module_box_values_" & id_site & "_" & id_tree & "_" & id_language & "_" & position & "_" & id_event & "_0.cache")
                        
                        returnData("<values><error errorId=""0"" errorLabel=""""/></values>")
                        
                    Catch ex As Exception

                        returnData("<values><error errorId=""301"" errorLabel=""enableBox2Tree Error"" errorMsg=""" & Server.HtmlEncode(ex.ToString()) & """/></values>")
                        
                    End Try
                    
                Case "boxUpdate"
                    
                    Dim boxId As String = Request("boxId")
                    Dim boxTitle As String = Request("boxTitle")
                    Dim boxDescription As String = Request("boxDescription")
                    Dim boxIdModule As String = Request("boxIdModule")
                    Dim boxWidth As String = Request("boxWidth")
                    Dim boxHeight As String = Request("boxHeight")
                    Dim boxCache As String = Request("boxCache")
                    Dim boxStyle As String = Request("boxStyle")
                    Dim boxRows As String = Request("boxRows")
                    Dim treeId As String = Request("treeId")
                    Dim contents As String = Request("boxContents")
                    Dim contexts As String = Request("boxContexts")
                    Dim trees As String = Request("boxTrees")
                    Dim relateds As String = Request("boxRelateds")
                    Dim users As String = Request("boxUsers")
                    Dim contentTypes As String = Request("boxContentTypes")
                    Dim boxEnabled As String = Request("boxEnabled")
                    Dim boxDateStart As String = Request("boxDateStart")
                    Dim boxDateEnd As String = Request("boxDateEnd")
                    
                    Dim myBox As CORE_BOX = New CORE_BOX(boxId)
                    
                    Try
                   
                        If boxTitle <> String.Empty Then myBox.box_title = boxTitle
                        If boxDescription <> String.Empty Then myBox.box_description = boxDescription
                        If boxIdModule <> String.Empty Then myBox.id_module = Convert.ToInt32(boxIdModule)
                        If boxWidth <> String.Empty Then myBox.width = Convert.ToInt32(boxWidth)
                        If boxHeight <> String.Empty Then myBox.height = Convert.ToInt32(boxHeight)
                        If boxCache <> String.Empty Then myBox.cache = boxCache
                        If boxStyle <> String.Empty Then myBox.style = boxStyle
                        If boxRows <> String.Empty Then myBox.box_rows = Convert.ToInt32(boxRows)
                        
                        If boxEnabled <> String.Empty Then myBox.box_enabled = True Else myBox.box_enabled = False
                        If boxDateStart <> String.Empty Then myBox.box_date_start = Convert.ToDateTime(boxDateStart) Else myBox.box_date_start = Nothing
                        If boxDateEnd <> String.Empty Then myBox.box_date_end = Convert.ToDateTime(boxDateEnd) Else myBox.box_date_end = Nothing
                        
                        If contents <> String.Empty Then myBox.contentsCollection = CORE_utility.stringToCollection(contents, "|", New SEARCH_VALUE_COLLECTION(Of Int32)) Else myBox.contentsCollection = New SEARCH_VALUE_COLLECTION(Of Int32)
                        If contexts <> String.Empty Then myBox.contextsCollection = CORE_utility.stringToCollection(contexts, "|", New SEARCH_VALUE_COLLECTION(Of Int32)) Else myBox.contextsCollection = New SEARCH_VALUE_COLLECTION(Of Int32)
                        If trees <> String.Empty Then myBox.treesCollection = CORE_utility.stringToCollection(trees, "|", New SEARCH_VALUE_COLLECTION(Of Int32)) Else myBox.treesCollection = New SEARCH_VALUE_COLLECTION(Of Int32)
                        If relateds <> String.Empty Then myBox.relatedsCollection = CORE_utility.stringToCollection(relateds, "|", New SEARCH_VALUE_COLLECTION(Of Int32)) Else myBox.relatedsCollection = New SEARCH_VALUE_COLLECTION(Of Int32)
                        If users <> String.Empty Then myBox.usersCollection = CORE_utility.stringToCollection(users, "|", New SEARCH_VALUE_COLLECTION(Of Int32)) Else myBox.usersCollection = New SEARCH_VALUE_COLLECTION(Of Int32)
                        If contentTypes <> String.Empty Then myBox.contentTypesCollection = CORE_utility.stringToCollection(contentTypes, ",", New SEARCH_VALUE_COLLECTION(Of Int32)) Else myBox.contentTypesCollection = New SEARCH_VALUE_COLLECTION(Of Int32)
                                                
                        myBox.update(myBox)
                    
                        mycacheobj.cache_folder = "modules"
                        mycacheobj.remove_cache("box_value_" & boxId & ".cache")
                        mycacheobj.remove_cache("module_box_values_" & treeId)
                        mycacheobj.remove_cache("box_list.cache")
                    
                        returnData("<values><error errorId=""0"" errorLabel=""""/></values>")
                    
                    Catch ex As Exception

                        returnData("<values><error errorId=""301"" errorLabel=""boxUpdate Error"" errorMsg=""" & Server.HtmlEncode(ex.ToString()) & """/></values>")
                        
                    End Try
                    
                                   
                Case "boxInsert"
                    
                    Dim boxTitle As String = Request("boxTitle")
                    Dim boxDescription As String = Request("boxDescription")
                    Dim boxIdModule As String = Request("boxIdModule")
                    Dim boxWidth As String = Request("boxWidth")
                    Dim boxHeight As String = Request("boxHeight")
                    Dim boxCache As String = Request("boxCache")
                    Dim boxStyle As String = Request("boxStyle")
                    Dim contents As String = Request("boxContents")
                    Dim contexts As String = Request("boxContexts")
                    Dim trees As String = Request("boxTrees")
                    Dim relateds As String = Request("boxRelateds")
                    Dim users As String = Request("boxUsers")
                    Dim contentTypes As String = Request("boxContentTypes")
                    Dim boxRows As String = Request("boxRows")
                    Dim boxEnabled As String = Request("boxEnabled")
                    Dim boxDateStart As String = Request("boxDateStart")
                    Dim boxDateEnd As String = Request("boxDateEnd")
                    Dim myBox As CORE_BOX = New CORE_BOX
                    
                    Try
                        
                   
                        myBox.box_title = boxTitle
                        myBox.box_description = boxDescription
                        If boxIdModule <> String.Empty Then myBox.id_module = Convert.ToInt32(boxIdModule)
                        If boxWidth <> String.Empty Then myBox.width = Convert.ToInt32(boxWidth)
                        If boxHeight <> String.Empty Then myBox.height = Convert.ToInt32(boxHeight)
                        If boxEnabled <> String.Empty Then myBox.box_enabled = True Else myBox.box_enabled = False
                        If boxDateStart <> String.Empty Then myBox.box_date_start = Convert.ToDateTime(boxDateStart)
                        If boxDateEnd <> String.Empty Then myBox.box_date_end = Convert.ToDateTime(boxDateEnd)
                        
                        If contents <> String.Empty Then myBox.contentsCollection = CORE_utility.stringToCollection(contents, "|", New SEARCH_VALUE_COLLECTION(Of Int32)) Else myBox.contentsCollection = New SEARCH_VALUE_COLLECTION(Of Int32)
                        If contexts <> String.Empty Then myBox.contextsCollection = CORE_utility.stringToCollection(contexts, "|", New SEARCH_VALUE_COLLECTION(Of Int32)) Else myBox.contextsCollection = New SEARCH_VALUE_COLLECTION(Of Int32)
                        If trees <> String.Empty Then myBox.treesCollection = CORE_utility.stringToCollection(trees, "|", New SEARCH_VALUE_COLLECTION(Of Int32)) Else myBox.treesCollection = New SEARCH_VALUE_COLLECTION(Of Int32)
                        If relateds <> String.Empty Then myBox.relatedsCollection = CORE_utility.stringToCollection(relateds, "|", New SEARCH_VALUE_COLLECTION(Of Int32)) Else myBox.relatedsCollection = New SEARCH_VALUE_COLLECTION(Of Int32)
                        If users <> String.Empty Then myBox.usersCollection = CORE_utility.stringToCollection(users, "|", New SEARCH_VALUE_COLLECTION(Of Int32)) Else myBox.usersCollection = New SEARCH_VALUE_COLLECTION(Of Int32)
                        If contentTypes <> String.Empty Then myBox.contentTypesCollection = CORE_utility.stringToCollection(contentTypes, "|", New SEARCH_VALUE_COLLECTION(Of Int32)) Else myBox.contentTypesCollection = New SEARCH_VALUE_COLLECTION(Of Int32)
                        
                        myBox.cache = boxCache
                        myBox.style = boxStyle
                        If boxRows <> String.Empty Then myBox.box_rows = Convert.ToInt32(boxRows)
                        
                        id_box = myBox.insert(myBox)
                        mycacheobj.cache_folder = "modules"
                        mycacheobj.remove_cache("box_list.cache")
                    
                        returnData("<values><error errorId=""0"" errorLabel=""""/></values>")
                    
                    Catch ex As Exception

                        returnData("<values><error errorId=""301"" errorLabel=""boxInsert Error"" errorMsg=""" & Server.HtmlEncode(ex.ToString()) & """/></values>")
                        
                    End Try
                    
                    
                    
                Case "getBoxList"
                    
                    Dim mybox As CORE_BOX = New CORE_BOX()
                    Dim mystring As StringBuilder
                    Try
                        
                        mystring = New StringBuilder
                        Dim values As DataTableReader = mybox.box_get_list()
                        
                        While values.Read
                                        
                            mystring.Append("<box title=""" & values("box_title") & """ description=""" & Server.HtmlEncode(values("box_description")) & """ id=""" & values("id_box") & """ />")
                                        
                        End While
                        values.Close()
                        
                
                        returnData("<values>" & mystring.ToString & "<error errorId=""0"" errorLabel=""""/></values>")
                
                    Catch ex As Exception
    		
                        returnData("<values><error errorId=""301"" errorLabel=""getBoxList Error"" errorMsg=""" & Server.HtmlEncode(ex.ToString()) & """/></values>")
    		
                    Finally
    		
                        If Not mybox Is Nothing Then mybox.Dispose() : mybox = Nothing
                    End Try
                    
                Case "getBox"
                    
                    Dim boxId As Integer = Request("boxId")
                    Dim mybox As CORE_BOX = New CORE_BOX(boxId)
                   
                    Try
                        
                        
                        Dim contents As String = String.Empty
                        Dim trees As String = String.Empty
                        Dim relateds As String = String.Empty
                        Dim contexts As String = String.Empty
                        Dim users As String = String.Empty
                        Dim contentTypes As String = String.Empty
                        
                        If mybox.contentsCollection.Items > 0 Then contents = CORE_utility.collectionJoin(mybox.contentsCollection, "|")
                        If mybox.treesCollection.Items > 0 Then trees = CORE_utility.collectionJoin(mybox.treesCollection, "|")
                        If mybox.relatedsCollection.Items > 0 Then relateds = CORE_utility.collectionJoin(mybox.relatedsCollection, "|")
                        If mybox.contextsCollection.Items > 0 Then contexts = CORE_utility.collectionJoin(mybox.contextsCollection, "|")
                        If mybox.usersCollection.Items > 0 Then users = CORE_utility.collectionJoin(mybox.usersCollection, "|")
                        If mybox.contentTypesCollection.Items > 0 Then contentTypes = CORE_utility.collectionJoin(mybox.contentTypesCollection, "|")
                        Dim Dstart As String = String.Empty
                        Dim Dend As String = String.Empty
                        
                        If Not mybox.box_date_end = Nothing Then Dend = mybox.box_date_end.ToString()
                        If Not mybox.box_date_start = Nothing Then Dstart = mybox.box_date_start.ToString()
                        
                        returnData("<values><box id=""" & boxId.ToString() & """ idModule=""" & mybox.id_module.ToString() & """ boxTitle=""" & mybox.box_title & """ boxDescription=""" & Server.HtmlEncode(mybox.box_description) & """  cache=""" & mybox.cache & """  style=""" & normalizeXml(Server.HtmlEncode(mybox.style)) & """  width=""" & mybox.width & """  height=""" & mybox.height & """ contents=""" & contents & """ trees=""" & trees & """ relateds=""" & relateds & """ contexts=""" & contexts & """ users=""" & users & """ contentTypes=""" & contentTypes & """ boxEnabled=""" & mybox.box_enabled & """ boxDateStart=""" & Dstart & """  boxDateEnd=""" & Dend & """/><error errorId=""0"" errorLabel=""""/></values>")
                
                    Catch ex As Exception
    		
                        returnData("<values><error errorId=""301"" errorLabel=""getBox Error"" errorMsg=""" & Server.HtmlEncode(ex.ToString()) & """/></values>")
    		
                    Finally
    		
                        If Not mybox Is Nothing Then mybox.Dispose() : mybox = Nothing
                    End Try
                    
                
                Case "getTreeModules"
                    boxes.Visible = True
                    
                    
                    Dim mybox As CORE_BOX = New CORE_BOX
            
                    Try
                                  
                        rp_header.DataSource = mybox.get_box(id_site, id_tree, id_language, 1, id_event, id_box)
                        rp_header.DataBind()
                   
                        rp_column1.DataSource = mybox.get_box(id_site, id_tree, id_language, 2, id_event, id_box)
                        rp_column1.DataBind()
            
                        rp_column2.DataSource = mybox.get_box(id_site, id_tree, id_language, 3, id_event, id_box)
                        rp_column2.DataBind()
            
                        rp_column3.DataSource = mybox.get_box(id_site, id_tree, id_language, 4, id_event, id_box)
                        rp_column3.DataBind()
            
                        rp_column4.DataSource = mybox.get_box(id_site, id_tree, id_language, 5, id_event, id_box)
                        rp_column4.DataBind()
            
                        rp_footer.DataSource = mybox.get_box(id_site, id_tree, id_language, 6, id_event, id_box)
                        rp_footer.DataBind()
                    
                    Catch ex As Exception
                        CORE.application_error_trace(ex.ToString)
                    End Try
                    
                    mybox.Dispose()
                    mybox = Nothing
                    
                    Response.ContentType = "text/html"
                
               
            End Select
            
            mycacheobj.Dispose()
            mycacheobj = Nothing
           
        End Sub
        
        
        Sub manage_box(ByVal o As Object, ByVal e As RepeaterItemEventArgs)
            
            If (e.Item.ItemType = ListItemType.Item) Or (e.Item.ItemType = ListItemType.AlternatingItem) Then

                Dim lt_id_key As Literal = e.Item.FindControl("lt_id_key")
                Dim _id_key As String = e.Item.DataItem("id_key") & "_" & CORE.random_key("0|9,0|9,0|9,0|9,0|9") & "-value"

                Dim _onoff As String = ""
                If e.Item.DataItem("box_enabled") Then _onoff = "on" Else _onoff = "off"

                lt_id_key.Text = "<div id='module_" & _id_key & "' id_box='" & e.Item.DataItem("id_box") & "' id_key='" & e.Item.DataItem("id_key") & "' class='groupItem' position='" & e.Item.DataItem("box_position") & "'><div class='itemHeader'>" & e.Item.DataItem("box_title") & "<div class=""itemOptions""><a href=""#"" class=""btn_enabled"" onclick=""javascript:box_enable('module_" & _id_key & "','" & e.Item.DataItem("id_key") & "');""><img src=""/core/core_images/admin/window_enabled_" & _onoff & ".jpg""/></a> <a href=""#"" class=""btn_modify"" onclick=""javascript:boxModify(" & e.Item.DataItem("id_box") & ");return false;""><img src=""/core/core_images/admin/window_max.jpg""/></a> <a href=""#"" onclick=""javascript:box_delete('module_" & _id_key & "','" & e.Item.DataItem("id_key") & "');""><img src=""/core/core_images/admin/window_close.jpg""/></a></div></div>"



            End If
            
        End Sub
		
    	  '///////////////////////////////////////////////////////////////////////////////////////
    '///////////////////////////////////////////////////////////////////////////////////////
    '///////////////////////////////////////////////////////////////////////////////////////
    '///////////////////////////////////////////////////////////////////////////////////////
    Function normalizeXml(ByVal myText As String) As String
    	
        If myText <> "" Then myText = myText.Replace("<", "#lt#").Replace(">", "#gt#")
    	
        Return myText
    	
    End Function
    	
        Sub returnData(ByVal myData As String)
               
            If responseType = "json" Then
                Dim Doc As New XmlDocument()
                Doc.LoadXml(myData)
                Response.ContentType = "text/plain"
                Response.Write(JSON.XmlToJSON(Doc))
                Doc = Nothing
            ElseIf responseType = "xml" Then
                Response.ContentType = "text/xml"
                Response.Write(myData)
            End If
     		
        End Sub
        
     
    	
       
        
    </script>

    <asp:literal id="textResponse" runat="server" Visible="false"></asp:literal>

    <asp:placeholder id="boxes" runat="server" visible="false">
    
    <asp:Repeater ID="rp_header" runat="server" onitemdatabound="manage_box">
	    <HeaderTemplate>
	    <div id="Header" class="groupWrapper" position="1">
	    </HeaderTemplate>
	    <ItemTemplate>
    	<asp:literal id="lt_id_key" runat="server"></asp:literal>
	    <div class="itemContent"><%#container.DataItem("box_description")%><asp:literal id="lt_options" runat="server"></asp:literal></div></div>
	    </ItemTemplate>
	    <FooterTemplate>
	    <p id="pheader" position="1" class="dropArea">&nbsp;</p></div>
	    </FooterTemplate>
	    </asp:Repeater>


	    <asp:Repeater ID="rp_column1" runat="server"  onitemdatabound="manage_box">
	    <HeaderTemplate>
	    <div id="Column1" class="groupWrapper" position="2">
	    </HeaderTemplate>
	    <ItemTemplate>
	    <asp:literal id="lt_id_key" runat="server"></asp:literal><div class="itemContent"><%#Container.DataItem("box_description")%><asp:literal id="lt_options" runat="server"></asp:literal></div></div>
	    </ItemTemplate>
	    <FooterTemplate>
	    <p id="pColumn1" position="2" class="dropArea">&nbsp;</p></div>
	    </FooterTemplate>
	    </asp:Repeater>

	    <asp:Repeater ID="rp_column2" runat="server"  onitemdatabound="manage_box">
	    <HeaderTemplate>
	    <div id="Column2" class="groupWrapper" position="3">
	    </HeaderTemplate>
	    <ItemTemplate>
	    <asp:literal id="lt_id_key" runat="server"></asp:literal><div class="itemContent"><%#Container.DataItem("box_description").ToString()%><asp:literal id="lt_options" runat="server"></asp:literal></div></div>
	    </ItemTemplate>
	    <FooterTemplate>
	    <p id="pColumn2" position="3" class="dropArea">&nbsp;</p></div>
	    </FooterTemplate>
	    </asp:Repeater>

    <asp:Repeater ID="rp_column3" runat="server"  onitemdatabound="manage_box">
	    <HeaderTemplate>
	    <div id="Column3" class="groupWrapper" position="4">
	    </HeaderTemplate>
	    <ItemTemplate>
	    <asp:literal id="lt_id_key" runat="server"></asp:literal><div class="itemContent"><%#container.DataItem("box_description")%><asp:literal id="lt_options" runat="server"></asp:literal></div></div>
	    </ItemTemplate>
	    <FooterTemplate>
	    <p id="pColumn3" position="4" class="dropArea">&nbsp;</p></div>
	    </FooterTemplate>
	    </asp:Repeater>

    <asp:Repeater ID="rp_column4" runat="server"  onitemdatabound="manage_box">
	    <HeaderTemplate>
	    <div id="Column4" class="groupWrapper" position="5">
	    </HeaderTemplate>
	    <ItemTemplate>
	    <asp:literal id="lt_id_key" runat="server"></asp:literal><div class="itemContent"><%#Container.DataItem("box_description")%><asp:literal id="lt_options" runat="server"></asp:literal></div></div>
	    </ItemTemplate>
	    <FooterTemplate>
	    <p id="pColumn4" position="5" class="dropArea">&nbsp;</p></div>
	    </FooterTemplate>
	    </asp:Repeater>


    <asp:Repeater ID="rp_footer" runat="server" onitemdatabound="manage_box">
	    <HeaderTemplate>
	    <div id="Footer" class="groupWrapper" position="6">
	    </HeaderTemplate>
	    <ItemTemplate>
	    <asp:literal id="lt_id_key" runat="server"></asp:literal><div class="itemContent"><%#Container.DataItem("box_description")%><asp:literal id="lt_options" runat="server"></asp:literal></div></div>
	    </ItemTemplate>
	    <FooterTemplate>
	    <p id="pFooter" position="6" class="dropArea">&nbsp;</p></div><div style="clear:both;"></div>
	    </FooterTemplate>
	    </asp:Repeater>
    	
	    </asp:placeholder>

