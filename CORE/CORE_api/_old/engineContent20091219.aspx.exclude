<%@ Import namespace="System.Data"%>
<%@ Import namespace="System.Data.sqlClient"%>
<%@ Import Namespace="System.xml" %>
<%@ Import Namespace="System.io" %>

<script runat="server">
    Dim language_id As Integer
    Dim id_content As Integer
    Dim id_related As Integer
    Dim id_key As Integer
    Dim id_tree As Integer
    Dim trees As String
    
    Dim id_site As Integer
    Dim rows As Integer
    Dim mypage As Integer
    Dim id_context As Integer
    Dim responseType As String
    
    Sub page_load()
     
        language_id = Request("language_id")
        id_content = Request("id_content")
        id_related = Request("id_related")
        id_key = Request("id_key")
        id_tree = Request("id_tree")
        trees = Request("trees")
        
        
        id_site = Request("id_site")
        rows = Request("rows")
        mypage = Request("page")
        id_context = Request("id_context")
        responseType = CORE.checkResponse()
     
        Select Case Request("who")
    		
    		
            '#############################################################
            '#############################################################	
            '#############################################################	
            Case "getContent"
    		
                Try
                    
              
                    Dim mycontent As CORE_CONTENT = New CORE_CONTENT(id_content)
    		
                    Dim myc As CORE_COOKIE
                    If Request.Cookies("CORE") Is Nothing Then
                        myc = New CORE_COOKIE("contentPath", id_content, 1)
                    Else
                        myc = New CORE_COOKIE("contentPath", id_content, 1)
                    End If
                    
                    
                    returnData("<values><content id_key=""" & mycontent.id_key & """ id_language=""" & language_id & """ id_content=""" & mycontent.id_content & """  enabled=""" & mycontent.content_enabled & """ title=""" & normalizeXml(mycontent.content_title) & """ abstract=""" & normalizeXml(mycontent.content_abstract) & """  date_publication=""" & Left(mycontent.content_date_publication, 10) & """ covers=""" & mycontent.content_covers & """ contentViews=""" & mycontent.content_views & """ postOption=""" & mycontent.post_option & """ defaultCover=""" & mycontent.content_default_cover & """>" & normalizeXml(mycontent.content_description) & "</content><error errorId=""0"" errorLabel=""""/></values>")
					
					
               
                    mycontent.Dispose()
                    mycontent = Nothing
                
                Catch ex As Exception
                    
                    returnData("<values><error errorId=""200"" errorLabel=""Get Content Error"" errorMessage=""" & ex.ToString & """/></values>")
                    
                End Try
               
                '#############################################################
                '#############################################################	
                '#############################################################			
            Case "getContentsCount"
                Try
                    Dim searcher As CORE_CONTENT_SEARCHER = New CORE_CONTENT_SEARCHER
                    searcher.id_language = language_id
                    Dim myTrees() As String
                    Dim tree As ArrayList = New ArrayList
                    
                    If trees <> "" Then
                    
                        myTrees = trees.Split(",")
                        Dim val As Integer
                        For Each val In myTrees
                            tree.Add(val)
                        Next
                        
                        
                        searcher.trees = tree
                        
                    ElseIf id_tree > 0 Then
                       
                        tree.Add(id_tree)
                        searcher.trees = tree
                                                
                    End If
                                        
                    
                    
                    returnData("<values><contents count=""" & searcher.searchcount() & """/><error errorId=""0"" errorLabel=""""/></values>")
                
              
                    searcher.Dispose()
                    searcher = Nothing
                
                Catch ex As Exception
                    
                    returnData("<values><error errorId=""201"" errorLabel=""Get Contents Count Error"" errorMessage=""" & ex.ToString & """/></values>")
                    
                End Try
              
                '#############################################################
                '#############################################################	
                '#############################################################			
            Case "getContentsValues"
    		
                Dim searcher As CORE_CONTENT_SEARCHER = New CORE_CONTENT_SEARCHER
                Dim myTrees() As String
                Dim tree As ArrayList = New ArrayList
                
                Try
                    searcher.id_language = language_id
                                       
                    
                    If trees <> "" Then
                    
                        myTrees = trees.Split(",")
                        Dim val As Integer
                        For Each val In myTrees
                            tree.Add(val)
                        Next
                        
                        
                        searcher.trees = tree
                        
                    ElseIf id_tree > 0 Then
                       
                        tree.Add(id_tree)
                        searcher.trees = tree
                                                
                    End If
                    
                    searcher.rows = rows
                    searcher.page = mypage
                    
                    Select Case Request("orderBy")
                        Case "0"
                            searcher.searchOrder = CORE_CONTENT_SEARCHER.order.contentIdDesc
                        Case "1"
                            searcher.searchOrder = CORE_CONTENT_SEARCHER.order.contentIdAsc
                        Case "2"
                            searcher.searchOrder = CORE_CONTENT_SEARCHER.order.contentDatePublicationDesc
                        Case "3"
                            searcher.searchOrder = CORE_CONTENT_SEARCHER.order.contentDatePublicationAsc
                        Case "4"
                            searcher.searchOrder = CORE_CONTENT_SEARCHER.order.contentEnabledDesc
                        Case "5"
                            searcher.searchOrder = CORE_CONTENT_SEARCHER.order.contentEnabledAsc
                        Case "6"
                            searcher.searchOrder = CORE_CONTENT_SEARCHER.order.contentTitleDesc
                        Case "7"
                            searcher.searchOrder = CORE_CONTENT_SEARCHER.order.contentTitleAsc
                    End Select
                   
                                        
                    Dim mycoll As CORE_CONTENT_COLLECTION(Of CORE_CONTENT_HOLDER) = searcher.search()
                    Dim myvalues As StringBuilder = New StringBuilder
                    Dim co As CORE_CONTENT_HOLDER
        
                    For Each co In mycoll
                        
                        
                        
                        myvalues.Append("<value title=""" & co.contentData.content_title & """ id_content=""" & co.contentData.id_content.ToString & """  id_key=""" & co.contentData.id_key.ToString & """  id_language=""" & co.contentData.id_language.ToString & """ enabled=""" & Convert.ToBoolean(co.contentData.content_enabled).ToString & """ date=""" & co.contentData.content_date_publication.ToString & """ />")
                       
                    Next
                    
                             
                    returnData("<values>" & myvalues.ToString() & "<error errorId=""0"" errorLabel=""""/></values>")
    			
                    searcher.Dispose()
                    searcher = Nothing
                Catch ex As Exception
                    returnData("<values><error errorId=""202"" errorLabel=""Get Contents Values Error"" errorMessage=""" & ex.ToString & """/></values>")
                Finally
                    If Not searcher Is Nothing Then searcher.Dispose() : searcher = Nothing
                    
                End Try
                
    		
                '#############################################################
                '#############################################################	
                '#############################################################	
            Case "insertContent"
    				
                Dim content As CORE_CONTENT = New CORE_CONTENT()
                Dim tree As CORE_TREE = New CORE_TREE()
                Dim author As CORE_USER = New CORE_USER
                Try
                    Dim content_title As String = Request("content_title")
                    
                    content.content_title = content_title
                    content.id_language = language_id
                    Dim newId As Integer = content.content_insert(content)
                    content.Dispose()
                    content = Nothing
                    
                    author.newRelation(newId, CORE_USER.getUserId())
                    
                    If id_tree > 0 Then
                        tree.newRelation(newId, id_tree, id_site)
                        tree.Dispose()
                        tree = Nothing
                    End If
                    
                    Dim contentFolder As String = Server.MapPath(ConfigurationManager.AppSettings("CORE_related_folder").ToString() & newId.ToString() & "/")
                    If Not System.IO.Directory.Exists(contentFolder) Then
                        
                        Directory.CreateDirectory(contentFolder)
                    
                    End If
                        
                   
                    
                    returnData("<values><content contentId=""" & newId & """ id_tree=""" & id_tree & """/><error errorId=""0"" errorLabel=""""/></values>")
                   
    		
                Catch err As Exception
                    
                    returnData("<values><error errorId=""203"" errorLabel=""Insert Content Error"" errorMsg=""" & err.ToString() & """/></values>")
    				
                Finally
                    If Not content Is Nothing Then content.Dispose() : content = Nothing
                    If Not tree Is Nothing Then tree.Dispose() : tree = Nothing
                    If Not author Is Nothing Then author.Dispose() : author = Nothing
                    
                End Try
                
                '#############################################################
                '#############################################################	
                '#############################################################	
            Case "updateContent"
                
                Dim content As CORE_CONTENT = New CORE_CONTENT(id_content)
                Try

                    Dim contentFolder As String = Server.MapPath(ConfigurationManager.AppSettings("CORE_related_folder").ToString() & id_content.ToString() & "/")
                    If Not System.IO.Directory.Exists(contentFolder) Then
                        
                        Directory.CreateDirectory(contentFolder)
                    
                    End If
                    
                    
                    Dim content_title As String = Request("content_title")
                    Dim content_abstract As String = Request("content_abstract")
                    Dim content_description As String = Request("content_description")
                    Dim content_publication As String = Request("content_publication")
                    Dim content_enabled As String = Request("content_enabled")
                    Dim post_option As String = Request("post_option")
                    If content_enabled = "" Then content_enabled = "false"
    				
                    
    				
                    If content_title <> "" Then content.content_title = content_title
                    If content_abstract <> "" Then content.content_abstract = content_abstract
                    If content_description <> "" Then content.content_description = content_description
                    If content_publication <> "" Then content.content_date_publication = content_publication
                    If content_enabled <> "" Then content.content_enabled = Convert.ToBoolean(content_enabled)
                    If post_option <> "" Then content.post_option = Convert.ToInt32(post_option)
    				
                    content.content_update(content)
                    content.refreshCache()
    				
                    Dim cacheobj As CORE_CACHE = New CORE_CACHE("content_detail_" & id_content & ".cache".ToLower(), "contents")
                    cacheobj.remove_cache()
    				
                    cacheobj = New CORE_CACHE("contents_" & language_id, "contents")
                    cacheobj.remove_cache()
    				
                    content.Dispose()
                    content = Nothing
                    cacheobj.Dispose()
                    cacheobj = Nothing
    				
                    returnData("<values><error errorId=""0"" errorLabel=""""/></values>")
    		
                Catch err As Exception
                    returnData("<values><error errorId=""204"" errorLabel=""Update Content Error"" errorMsg=""" & err.ToString() & """/></values>")
    		
                Finally
                    If Not content Is Nothing Then content.Dispose() : content = Nothing
                    
                End Try
                
                '#############################################################
                '#############################################################	
                '#############################################################			
            Case "deleteContents"
                Dim content As CORE_CONTENT = New CORE_CONTENT
                
                Try
                    
                    Dim contents() As String = Request("contents").Split("|")
                    
                    Dim id As Integer = 0
                    Dim contentFolder As String
                    
                    
                    For Each id In contents
                        content = New CORE_CONTENT(id)
                        content.content_delete(id)
                        content.refreshCache()
                        
                        contentFolder = Server.MapPath(ConfigurationManager.AppSettings("CORE_related_folder").ToString() & id.ToString() & "/")
                        If System.IO.Directory.Exists(contentFolder) Then Directory.Delete(contentFolder)
                    
                        
                        
                    Next
                    If Not content Is Nothing Then content.Dispose() : content = Nothing
                    
                    returnData("<values><error errorId=""0"" errorLabel=""""/></values>")
                
                              
                Catch ex As Exception
                    
                    returnData("<values><error errorId=""205"" errorLabel=""Delete Contents Error"" errorMessage=""" & ex.ToString & """/></values>")
                    
                Finally
                    If Not content Is Nothing Then content.Dispose() : content = Nothing
                    
                End Try
                
                '#############################################################
                '#############################################################	
                '#############################################################			
            Case "updateContentField"
                Dim content As CORE_CONTENT = New CORE_CONTENT(id_content)
                
                Try
                    
                    
                    content.update_field(id_content, Request("field"), Request("value"))
                    content.refreshCache()
                    If Not content Is Nothing Then content.Dispose() : content = Nothing
                    
                    returnData("<values><error errorId=""0"" errorLabel=""""/></values>")
                
                              
                Catch ex As Exception
                    
                    returnData("<values><error errorId=""206"" errorLabel=""Update Content Field Error"" errorMessage=""" & ex.ToString & """/></values>")
                    
                Finally
                    If Not content Is Nothing Then content.Dispose() : content = Nothing
                    
                End Try
              
      	
        End Select
    		
    		
    End Sub
    
    
    '///////////////////////////////////////////////////////////////////////////////////////
    '///////////////////////////////////////////////////////////////////////////////////////
    '///////////////////////////////////////////////////////////////////////////////////////
    '///////////////////////////////////////////////////////////////////////////////////////
    Function normalizeXml(ByVal myText As String) As String
    	
		
        If myText <> "" Then 
		myText = server.HtmlEncode(myText)
		myText = myText.Replace("<", "#lt#").Replace(">", "#gt#")
    	end if
        Return myText
    	
    End Function
    '///////////////////////////////////////////////////////////////////////////////////////
    '///////////////////////////////////////////////////////////////////////////////////////
    '///////////////////////////////////////////////////////////////////////////////////////
    '///////////////////////////////////////////////////////////////////////////////////////
    Sub returnData(ByVal myData As String)
               
        If responseType = "json" Then
            Dim Doc As New XmlDocument()
            Doc.LoadXml(myData)
            Response.ContentType = "text/plain"
            Response.Write(JSON.XmlToJSON(Doc))
            Doc = Nothing
        ElseIf responseType = "xml" Then
            Response.ContentType = "text/xml"
            Response.Write(myData)
        End If
     		
    End Sub
    	
        
        </script>